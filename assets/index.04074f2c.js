import{r as f,aC as w,d as I,Z as $,_ as C,m as E,b2 as y,e as z,o as u,k as g,i as S,f as k,F as h,aD as T,ar as x,aE as L}from"./index.a812ffa9.js";import{E as N}from"./index.92c9b7b5.js";function O({target:e,root:i,onIntersect:s,rootMargin:n="0px",threshold:a=.1}){let o=()=>{};const t=f(null),r=w(()=>{o(),t.value=new IntersectionObserver(s,{root:i?i.value:null,rootMargin:n,threshold:a});const l=e.value;l&&t.value.observe(l),o=()=>{t.value&&(t.value.disconnect(),e.value&&t.value.unobserve(e.value))}});return{observer:t,stop:()=>{o(),r()}}}const R=I({name:"LazyContainer",components:{ElSkeleton:N},inheritAttrs:!1,props:{timeout:{type:Number},viewport:{type:typeof window<"u"?window.HTMLElement:Object,default:()=>null},threshold:{type:String,default:"0px"},direction:{type:String,default:"vertical",validator:e=>["vertical","horizontal"].includes(e)},tag:{type:String,default:"div"},maxWaitingTime:{type:Number,default:120},transitionName:{type:String,default:"lazy-container"}},emits:["init"],setup(e,{emit:i}){const s=f(),n=f(!1),a=f(!1),{prefixCls:o}=E("lazy-container");function t(){const{timeout:c}=e;c&&setTimeout(()=>{r()},c)}function r(){a.value=!0,setTimeout(()=>{n.value||(n.value=!0,i("init"))},e.maxWaitingTime||120)}function l(){const{timeout:c,direction:_,threshold:p}=e;if(c)return;let d="0px";switch(_){case"vertical":d=`${p} 0px`;break;case"horizontal":d=`0px ${p}`;break}try{const{stop:m,observer:b}=O({rootMargin:d,target:y(s.value,"$el"),onIntersect:v=>{(v[0].isIntersecting||v[0].intersectionRatio)&&(r(),b&&m())},root:y(e,"viewport")})}catch(m){r()}}return $(()=>{t(),l()}),{prefixCls:o,elRef:s,isInit:n,loading:a}}}),B={key:"component"},M={key:"skeleton"};function D(e,i,s,n,a,o){const t=z("ElSkeleton");return u(),g(x,T({class:e.prefixCls},e.$attrs,{ref:"elRef",name:e.transitionName,tag:e.tag,mode:"out-in"}),{default:S(()=>[e.isInit?(u(),k("div",B,[h(e.$slots,"default",{loading:e.loading})])):(u(),k("div",M,[e.$slots.skeleton?h(e.$slots,"skeleton",{key:0}):(u(),g(t,{key:1}))]))]),_:3},16,["class","name","tag"])}const W=C(R,[["render",D]]),G=L(W);export{G as L};
