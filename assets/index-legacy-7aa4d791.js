!function(){function r(r){return function(r){if(Array.isArray(r))return t(r)}(r)||function(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function(r,n){if(!r)return;if("string"==typeof r)return t(r,n);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return t(r,n)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(r,t){(null==t||t>r.length)&&(t=r.length);for(var n=0,e=new Array(t);n<t;n++)e[n]=r[n];return e}System.register([],(function(t){"use strict";return{execute:function(t,n){function e(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,e=0,o=0;switch(r<=t?(o=r,e=t):(o=t,e=r),arguments.length){case 1:return Math.floor(Math.random()*(e+1));case 2:return Math.floor(Math.random()*(e-o+1)+o);case 3:return parseFloat((Math.random()*(e-o)+o).toFixed(n));default:return Math.random()}}t({a:function(t){return Array.apply(void 0,r(Array(t))).map((function(){return e(1,1e5)}))},g:function(){for(var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",o=[],a=r;a<=t;a++)o.push(n+a+e);return o},r:e})}}}))}();